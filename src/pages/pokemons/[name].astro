---
import type { GetStaticPaths } from 'astro';
import { Icon } from 'astro-icon/components'
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import MainLayout from "@layout/MainLayout.astro";
import Title from '@components/shared/Title.astro';


export const getStaticPaths = ( async () => {

    const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
    const { results } = await resp.json() as PokemonListResponse;

    return results.map( ({ name, url }) => ({
        params: { name:   name },
        props: { name: name, url: url }
        }))
            
        
    }) satisfies GetStaticPaths;

    const { name } = Astro.params;
    const { url } = Astro.props;

    const id = url.split('/').at(-2);
    const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${ id }.ogg`
    const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${ id }.png`
---

<MainLayout title=`Pokemon - # ${id} ${name}` 
    description=`Información sobre el Pokémon ${name}`
    image={imageSrc}
>
    <section class="m-10 flex flex-col justify-center items-center">
        <div class="flex flex-row">
            <div class="flex flex-col items-center">
                <button class="text-2xl capitalize bg-pink-400 rounded p-2 mb-2 hover:bg-pink-800 mx-auto" onclick="history.back()">Regresar</button>
                <Title>{name}</Title>
            </div>
            <button id="btn-favorite" class="ml-4" data-name={name}  data-id={id}>

                <Icon data-autline name="heart-outline" size={50}/>
                <Icon data-full class="hidden" name="heart-full" size={50}/>
            </button>
        </div>
      
        <PokemonCard 
            name={name}
            url={url}
            isBig={true}
        />
        <audio controls class="mt-5" >
            <source src={audioSrc} type="audio/ogg"/>
            your browser does not support the audio element
        </audio>
    </section>

</MainLayout>

<script>
    import type { FavoritePokemon } from '@interfaces/favorite-pokemon'
 
/*
    document.addEventListener('astro:before-preparation', () => {
        console.log('astro:before-preparation')
    })

    document.addEventListener('astro:after-preparation', () => {
        console.log('astro:after-preparation')
    })

    document.addEventListener('astro:before-swap', () => {
        console.log('astro:before-swap')
    })

    document.addEventListener('astro:after-swap', () => {
        console.log('astro:after-swap')
    })

*/
    const handlePageLoad = () =>{

        let favoritePokemons: FavoritePokemon[] = JSON.parse(localStorage.getItem('favorites') ?? '[]');

        
        const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement;
        
        if(!btnFavorite) return;
        
        const name =  btnFavorite.dataset.name ?? '';
        const id =  btnFavorite.dataset.id ?? '';
        const isFavorite = favoritePokemons.some(fav => fav.name === name);
        
        const heartOutline = btnFavorite.querySelector('[data-autline]') as HTMLElement;
        const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;


        if(isFavorite){
            heartOutline.classList.add('hidden')
            heartFull.classList.remove('hidden')
        }

        const toggleFavorite = () => {
            const isFavorite = favoritePokemons.some(fav => fav.name === name);

            if(isFavorite){
                favoritePokemons = favoritePokemons.filter(fav => fav.name !== name) 
            } else {
                favoritePokemons.push({
                    name: name,
                    id: +id

                })
            }
            localStorage.setItem('favorites', JSON.stringify(favoritePokemons));
        }

        btnFavorite.addEventListener('click', () => {
            heartOutline.classList.toggle('hidden')
            heartFull.classList.toggle('hidden')

            toggleFavorite();
        })
    }

    document.addEventListener('astro:page-load', handlePageLoad)
</script>

<style>
    a {
        @apply hover:underline text-pink-400
    }
    #btn-favorite {
        @apply hover:animate-pulse
    }
</style>